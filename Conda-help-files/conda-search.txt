usage: conda-script.py search [-h] [--envs] [-i] [--subdir SUBDIR]
                              [-c CHANNEL] [--use-local] [--override-channels]
                              [--repodata-fn REPODATA_FNS] [-C] [-k]
                              [--offline] [--json] [-v] [-q]

Search for packages and display associated information.
    The input is a MatchSpec, a query language for conda packages.
    See examples below.

Options:

optional arguments:
  -h, --help            Show this help message and exit.
  --envs                Search all of the current user's environments. If run
                        as Administrator (on Windows) or UID 0 (on unix),
                        search all known environments on the system.
  -i, --info            Provide detailed information about each package.
  --subdir SUBDIR, --platform SUBDIR
                        Search the given subdir. Should be formatted like
                        'osx-64', 'linux-32', 'win-64', and so on. The default
                        is to search the current platform.

Channel Customization:
  -c CHANNEL, --channel CHANNEL
                        Additional channel to search for packages. These are
                        URLs searched in the order they are given (including
                        local directories using the 'file://' syntax or simply
                        a path like '/home/conda/mychan' or '../mychan').
                        Then, the defaults or channels from .condarc are
                        searched (unless --override-channels is given). You
                        can use 'defaults' to get the default packages for
                        conda. You can also use any name and the .condarc
                        channel_alias value will be prepended. The default
                        channel_alias is https://conda.anaconda.org/.
  --use-local           Use locally built packages. Identical to '-c local'.
  --override-channels   Do not search default or .condarc channels. Requires
                        --channel.
  --repodata-fn REPODATA_FNS
                        Specify name of repodata on remote server. Conda will
                        try whatever you specify, but will ultimately fall
                        back to repodata.json if your specs are not
                        satisfiable with what you specify here. This is used
                        to employ repodata that is reduced in time scope. You
                        may pass this flag more than once. Leftmost entries
                        are tried first, and the fallback to repodata.json is
                        added for you automatically.

Networking Options:
  -C, --use-index-cache
                        Use cache of channel index files, even if it has
                        expired.
  -k, --insecure        Allow conda to perform "insecure" SSL connections and
                        transfers. Equivalent to setting 'ssl_verify' to
                        'false'.
  --offline             Offline mode. Don't connect to the Internet.

Output, Prompt, and Flow Control Options:
  --json                Report all output as json. Suitable for using conda
                        programmatically.
  -v, --verbose         Use once for info, twice for debug, three times for
                        trace.
  -q, --quiet           Do not display progress bar.

Examples:

Search for a specific package named 'scikit-learn':

    conda search scikit-learn

Search for packages containing 'scikit' in the package name:

    conda search *scikit*

Note that your shell may expand '*' before handing the command over to conda.
Therefore it is sometimes necessary to use single or double quotes around the query.

    conda search '*scikit'
    conda search "*scikit*"

Search for packages for 64-bit Linux (by default, packages for your current
platform are shown):

    conda search numpy[subdir=linux-64]

Search for a specific version of a package:

    conda search 'numpy>=1.12'

Search for a package on a specific channel

    conda search conda-forge::numpy
    conda search 'numpy[channel=conda-forge, subdir=osx-64]'
